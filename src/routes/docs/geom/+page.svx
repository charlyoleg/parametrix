---
title: Geom'docs
category: documentation
---

<script lang="ts">
	import { base } from '$app/paths';
</script>


# {title}


## Triangle

### Right triangle

![right_triangle.svg]({base}/right_triangle.svg)

### Any triangle

![any_triangle.svg]({base}/any_triangle.svg)


## Point

### Point polar coordinates
![point_1.svg]({base}/point_1.svg)

### Basic point transforms
![point_2.svg]({base}/point_2.svg)
![point_3.svg]({base}/point_3.svg)

### Measurements between 2 points
![point_4.svg]({base}/point_4.svg)

### Create a point from 2 points
![point_5.svg]({base}/point_5.svg)


## Line

### Line and X-axis
![line_getAxisXIntersection.svg]({base}/line_getAxisXIntersection.svg)
![line_getAxisXIntersection_2.svg]({base}/line_getAxisXIntersection_2.svg)
![line_axis_x_cases.svg]({base}/line_axis_x_cases.svg)

### Line and Y-axis
![line_getAxisYIntersection.svg]({base}/line_getAxisYIntersection.svg)
![line_getAxisYIntersection_2.svg]({base}/line_getAxisYIntersection_2.svg)
![line_getAxisYIntersection_3.svg]({base}/line_getAxisYIntersection_3.svg)
![line_axis_y_cases.svg]({base}/line_axis_y_cases.svg)

### Projection of origin on line
![line_distanceOrig.svg]({base}/line_distanceOrig.svg)

### Projection of point on line
![line_projectPoint.svg]({base}/line_projectPoint.svg)

### Line intersection and bisector
![line_intersection.svg]({base}/line_intersection.svg)
![construction_of_line_intersection_1.svg]({base}/construction_of_line_intersection_1.svg)
![construction_of_line_intersection_2.svg]({base}/construction_of_line_intersection_2.svg)


## Vector

A vector is defined by its orientation and its length.

![vector_definition.svg]({base}/vector_definition.svg)


## Contour

### Contour description

A *Contour* object defines a closed path that consists of segments and arcs.
A *ContourCircle* object defines a circle.

*arc* are defined differently in *canvas-js* and in *svg-path*.

![arc_definition.svg]({base}/arc_definition.svg)

*Contour* has 3 methods to define arcs.

![contour_arc_definition_options.svg]({base}/contour_arc_definition_options.svg)

*Point* and *Stroke* can be defined relative to the previous point or absolute, with cartesian or polar coordinates.

![contour_point_absolute_relative.svg]({base}/contour_point_absolute_relative.svg)


*2-arc* defined by two points and there two tangents

![contour_tangential_two_arcs_requirements.svg]({base}/contour_tangential_two_arcs_requirements.svg)
![contour_tangential_two_arcs.svg]({base}/contour_tangential_two_arcs.svg)
![contour_tangential_two_arcs_impossible_case.svg]({base}/contour_tangential_two_arcs_impossible_case.svg)

### Contour generation

#### Corner Pointed

*contour().addCornerPointed()* does not modify the corner.


#### Corner Rounded

*contour().addCornerRounded(radius)* replaces the peak with an arc within the angle/peak. There is one optimal solution for the problematic.

![corner_rounded_stroke_stroke.svg]({base}/corner_rounded_stroke_stroke.svg)
![corner_rounded_stroke_int_arc.svg]({base}/corner_rounded_stroke_int_arc.svg)
![corner_rounded_stroke_ext_arc.svg]({base}/corner_rounded_stroke_ext_arc.svg)
![corner_rounded_ext_arc_ext_arc.svg]({base}/corner_rounded_ext_arc_ext_arc.svg)
![corner_rounded_int_arc_ext_arc.svg]({base}/corner_rounded_int_arc_ext_arc.svg)
![corner_rounded_int_arc_int_arc.svg]({base}/corner_rounded_int_arc_int_arc.svg)


#### Corner Widened

*contour().addCornerWidened(radius)* replaces the peak with an arc around the angle/peak. There are many possibilities to fulfil the problematic. The selected solution is to have the center of the arc on the bisector of the peak-angle.

#### Corner summary

| Corner options     | jutting corner  | recess corner   |
|--------------------|-----------------|-----------------|
| *corner pointed*   | no change       | no change       |
| *corner rounded*   | remove material | add material    |
| *corner widened*   | add material    | remove material |


## Figure

A *Figure* object consists in several lists:
1. list of points
1. list of lines
1. list of vectors
1. list of contours called *main*
1. list of contours called *mainB* or *main-skeleton*
1. list of contours called *second*
1. list of contours called *secondB* or *second-skeleton*
1. list of contours called *dynamics*


<style lang="scss">
	@use '$lib/style/colors.scss';

	h1 {
		margin: 1rem;
	}
	table {
		border-collapse: collapse;
	}
	table > thead > tr > th,
	table > tbody > tr > td {
		padding: 0.1rem 1rem;
		border: 1px solid purple;
	}
</style>
